{"version":3,"file":"utils.min.js","sources":["../src/consts.ts","../src/utils.ts","../src/color.ts","../src/dom.ts"],"sourcesContent":["/**\n* @namespace\n* @name Consts\n*/\n\nimport { IObject, OpenCloseCharacter } from \"./types\";\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nexport const RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\nexport const RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\nexport const HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\nexport const HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\nexport const COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\nexport const FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\nexport const PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\nexport const ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\nexport const OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\nexport const STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\nexport const NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\nexport const UNDEFINED = \"undefined\";\n\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\nexport const IS_WINDOW = typeof window !== UNDEFINED;\n\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\nconst doc = (typeof document !== UNDEFINED && document) as Document; // FIXME: this type maybe false\n\nexport {doc as document};\n\nconst prefixes: string[] = [\"webkit\", \"ms\", \"moz\", \"o\"];\n\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\nexport const getCrossBrowserProperty =  /*#__PURE__*/(property: string) => {\n  if (!doc) {\n    return \"\";\n  }\n  const styles = (doc.body || doc.documentElement).style as any;\n  const length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n  for (let i = 0; i < length; ++i) {\n    const name = `-${prefixes[i]}-${property}`;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n  return \"\";\n};\n\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\nexport const TRANSFORM = /*#__PURE__*/getCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\nexport const FILTER = /*#__PURE__*/getCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\nexport const ANIMATION = /*#__PURE__*/getCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\nexport const KEYFRAMES = /*#__PURE__*/ANIMATION.replace(\"animation\", \"keyframes\");\n\nexport const OPEN_CLOSED_CHARACTERS: OpenCloseCharacter[] = [\n  { open: \"(\", close: \")\" },\n  { open: `\"`, close: `\"`},\n  { open: `'`, close: `'`},\n  { open: `\\\\\"`, close: `\\\\\"`},\n  { open: `\\\\'`, close: `\\\\'`},\n];\nexport const TINY_NUM = 0.0000001;\nexport const DEFAULT_UNIT_PRESETS: IObject<(pos: number, size?: number) => number> = {\n  \"cm\": pos => pos * 96 / 2.54,\n  \"mm\": pos => pos * 96 / 254,\n  \"in\": pos => pos * 96,\n  \"pt\": pos => pos * 96 / 72,\n  \"pc\": pos => pos * 96 / 6,\n  \"%\": (pos, size) => pos * size! / 100,\n  \"vw\": (pos, size = window.innerWidth) => pos / 100 * size,\n  \"vh\": (pos, size = window.innerHeight) => pos / 100 * size,\n  \"vmax\": (pos, size = Math.max(window.innerWidth, window.innerHeight)) => pos / 100 * size,\n  \"vmin\": (pos, size = Math.min(window.innerWidth, window.innerHeight)) => pos / 100 * size,\n};\n","import {\n  UNDEFINED, STRING,\n  OBJECT, FUNCTION,\n  IS_WINDOW, OPEN_CLOSED_CHARACTERS, NUMBER,\n  DEFAULT_UNIT_PRESETS,\n  TINY_NUM\n} from \"./consts\";\nimport { IArrayFormat, IObject, OpenCloseCharacter, SplitOptions } from \"./types\";\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n * Returns the inner product of two numbers(`a1`, `a2`) by two criteria(`b1`, `b2`).\n * @memberof Utils\n * @param - The first number\n * @param - The second number\n * @param - The first number to base on the inner product\n * @param - The second number to base on the inner product\n * @return - Returns the inner product\nimport { dot } from \"@daybrush/utils\";\n\nconsole.log(dot(0, 15, 2, 3)); // 6\nconsole.log(dot(5, 15, 2, 3)); // 9\nconsole.log(dot(5, 15, 1, 1)); // 10\n */\nexport function dot(a1: number, a2: number, b1: number, b2: number) {\n  return (a1 * b2 + a2 * b1) / (b1 + b2);\n}\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\nexport function isUndefined(value: any): value is undefined {\n  return (typeof value === UNDEFINED);\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\nexport function isObject(value: any): value is IObject<any> {\n  return value && (typeof value === OBJECT);\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\nexport function isArray(value: any): value is any[] {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\nexport function isString(value: any): value is string {\n  return typeof value === STRING;\n}\n\nexport function isNumber(value: any): value is number {\n  return typeof value === NUMBER;\n}\n\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === FUNCTION;\n}\nfunction isEqualSeparator(\n  character: string,\n  separator: string,\n) {\n  const isCharacterSpace = character === \"\" || character == \" \";\n  const isSeparatorSpace = separator === \"\" || separator == \" \";\n\n  return (isSeparatorSpace && isCharacterSpace) || character === separator;\n}\nfunction findOpen(\n  openCharacter: OpenCloseCharacter,\n  texts: string[],\n  index: number,\n  length: number,\n  openCloseCharacters: OpenCloseCharacter[],\n) {\n  const isIgnore = findIgnore(openCharacter, texts, index);\n\n  if (!isIgnore) {\n    return findClose(openCharacter, texts, index + 1, length, openCloseCharacters);\n  }\n  return index;\n}\nfunction findIgnore(\n  character: OpenCloseCharacter,\n  texts: string[],\n  index: number,\n) {\n  if (!character.ignore) {\n    return null;\n  }\n  const otherText = texts.slice(Math.max(index - 3, 0), index + 3).join(\"\");\n\n  return new RegExp(character.ignore).exec(otherText);\n\n}\nfunction findClose(\n  closeCharacter: OpenCloseCharacter,\n  texts: string[],\n  index: number,\n  length: number,\n  openCloseCharacters: OpenCloseCharacter[],\n) {\n  for (let i = index; i < length; ++i) {\n    const character = texts[i].trim();\n\n    if (character === closeCharacter.close && !findIgnore(closeCharacter, texts, i)) {\n      return i;\n    }\n    let nextIndex = i;\n    // re open\n    const openCharacter = find(openCloseCharacters, ({ open }) => open === character);\n\n    if (openCharacter) {\n      nextIndex = findOpen(openCharacter, texts, i, length, openCloseCharacters);\n    }\n    if (nextIndex === -1) {\n      break;\n    }\n    i = nextIndex;\n  }\n  return -1;\n}\n\nexport function splitText(\n  text: string,\n  splitOptions: string | SplitOptions,\n) {\n  const {\n    separator = \",\",\n    isSeparateFirst,\n    isSeparateOnlyOpenClose,\n    isSeparateOpenClose = isSeparateOnlyOpenClose,\n    openCloseCharacters = OPEN_CLOSED_CHARACTERS,\n  } = isString(splitOptions) ? {\n    separator: splitOptions,\n  } as SplitOptions : splitOptions;\n  const openClosedText = openCloseCharacters.map(({ open, close }) => {\n    if (open === close) {\n      return open;\n    }\n    return `${open}|${close}`;\n  }).join(\"|\");\n  const regexText = `(\\\\s*${separator}\\\\s*|${openClosedText}|\\\\s+)`;\n  const regex = new RegExp(regexText, \"g\");\n  const texts = text.split(regex).filter(Boolean);\n  const length = texts.length;\n  const values: string[] = [];\n  let tempValues: string[] = [];\n\n  function resetTemp() {\n    if (tempValues.length) {\n      values.push(tempValues.join(\"\"));\n      tempValues = [];\n\n      return true;\n    }\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    const character = texts[i].trim();\n    let nextIndex = i;\n\n\n    const openCharacter = find(openCloseCharacters, ({ open }) => open === character);\n    const closeCharacter = find(openCloseCharacters, ({ close }) => close === character);\n\n    if (openCharacter) {\n      nextIndex = findOpen(openCharacter, texts, i, length, openCloseCharacters);\n\n      if (nextIndex !== -1 && isSeparateOpenClose) {\n        if (resetTemp() && isSeparateFirst) {\n          break;\n        }\n        values.push(texts.slice(i, nextIndex + 1).join(\"\"));\n        i = nextIndex;\n\n        if (isSeparateFirst) {\n          break;\n        }\n        continue;\n      }\n    } else if (closeCharacter && !findIgnore(closeCharacter, texts, i)) {\n      throw new Error(`invalid format: ${closeCharacter.close}`);\n    } else if (isEqualSeparator(character, separator) && !isSeparateOnlyOpenClose) {\n      resetTemp();\n      if (isSeparateFirst) {\n        break;\n      }\n      continue;\n    }\n\n    if (nextIndex === -1) {\n      nextIndex = length - 1;\n    }\n    tempValues.push(texts.slice(i, nextIndex + 1).join(\"\"));\n    i = nextIndex;\n  }\n  if (tempValues.length) {\n    values.push(tempValues.join(\"\"));\n  }\n  return values;\n}\n\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitSpace(text: string) {\n  // divide comma(space)\n  return splitText(text, \"\");\n}\n\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitComma(text: string): string[] {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  return splitText(text, \",\");\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\nexport function splitBracket(text: string) {\n  const matches = (/([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g).exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return { prefix: matches[1], value: matches[2], suffix: matches[3] };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\nexport function splitUnit(text: string): { prefix: string, unit: string, value: number } {\n  const matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return { prefix: \"\", unit: \"\", value: NaN };\n  }\n  const prefix = matches[1];\n  const value = matches[2];\n  const unit = matches[3];\n\n  return { prefix, unit, value: parseFloat(value) };\n}\n\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\nexport function decamelize(str: string, separator: string = \"-\") {\n  return str.replace(/([a-z])([A-Z])/g, (all, letter, letter2) => `${letter}${separator}${letter2.toLowerCase()}`);\n}\n\n/**\n* transforms something in an array into an array.\n* @memberof Utils\n* @param - Array form\n* @return an array\n* @example\nimport {toArray} from \"@daybrush/utils\";\n\nconst arr1 = toArray(document.querySelectorAll(\".a\")); // Element[]\nconst arr2 = toArray(document.querySelectorAll<HTMLElement>(\".a\")); // HTMLElement[]\n*/\nexport function toArray<T>(value: IArrayFormat<T>): T[] {\n  return [].slice.call(value);\n}\n\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\nexport function now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n\n/**\n* Returns the index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findIndex } from \"@daybrush/utils\";\n\nfindIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\nexport function findIndex<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defaultIndex: number = -1,\n): number {\n  const length = arr.length;\n\n  for (let i = 0; i < length; ++i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return defaultIndex;\n}\n\n/**\n* Returns the reverse direction index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findLastIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findLastIndex } from \"@daybrush/utils\";\n\nfindLastIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\nexport function findLastIndex<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defaultIndex: number = -1,\n): number {\n  const length = arr.length;\n\n  for (let i = length - 1; i >= 0; --i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return defaultIndex;\n}\n\n/**\n* Returns the value of the reverse direction element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findLast` was called upon.\n* @param - A function to execute on each value in the array,\n* @param - Returns defalutValue if not found by the function.\n* @example\nimport { find } from \"@daybrush/utils\";\n\nfind([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // {a: 2}\n*/\nexport function findLast<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defalutValue?: T,\n): T | undefined {\n  const index = findLastIndex(arr, callback);\n\n  return index > - 1 ? arr[index] : defalutValue;\n}\n/**\n* Returns the value of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `find` was called upon.\n* @param - A function to execute on each value in the array,\n* @param - Returns defalutValue if not found by the function.\n* @example\nimport { find } from \"@daybrush/utils\";\n\nfind([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // {a: 2}\n*/\nexport function find<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defalutValue?: T,\n): T | undefined {\n  const index = findIndex(arr, callback);\n\n  return index > - 1 ? arr[index] : defalutValue;\n}\n\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\nexport const requestAnimationFrame = /*#__PURE__*/(() => {\n  const firstTime = now();\n  const raf = IS_WINDOW\n    && (window.requestAnimationFrame || window.webkitRequestAnimationFrame\n      || (window as any).mozRequestAnimationFrame || (window as any).msRequestAnimationFrame);\n\n  return raf ? (raf.bind(window) as (callback: FrameRequestCallback) => number) : ((callback: FrameRequestCallback) => {\n    const currTime = now();\n    const id = window.setTimeout(() => {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  });\n})();\n\n/**\n* window.cancelAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {number} handle - the id obtained through requestAnimationFrame method\n* @return {void}\n* @example\nimport { requestAnimationFrame, cancelAnimationFrame } from \"@daybrush/utils\";\n\nconst id = requestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n\ncancelAnimationFrame(id);\n*/\nexport const cancelAnimationFrame = /*#__PURE__*/(() => {\n  const caf = IS_WINDOW\n    && (window.cancelAnimationFrame || window.webkitCancelAnimationFrame\n      || (window as any).mozCancelAnimationFrame || (window as any).msCancelAnimationFrame);\n\n  return caf\n    ? caf.bind(window) as (handle: number) => void\n    : ((handle: number) => { clearTimeout(handle); });\n})();\n/**\n* @function\n* @memberof Utils\n*/\nexport function getKeys(obj: IObject<any>): string[] {\n  if (Object.keys) {\n    return Object.keys(obj);\n  }\n  const keys: string[] = [];\n  for (const name in keys) {\n    keys.push(name);\n  }\n  return keys;\n}\n\n/**\n* @function\n* @memberof Utils\n*/\nexport function sortOrders(keys: Array<string | number>, orders: Array<string | number> = []) {\n  keys.sort((a, b) => {\n    const index1 = orders.indexOf(a);\n    const index2 = orders.indexOf(b);\n\n    if (index2 === -1 && index1 === -1) {\n      return 0;\n    }\n    if (index1 === -1) {\n      return 1;\n    }\n    if (index2 === -1) {\n      return -1;\n    }\n    return index1 - index2;\n  });\n}\n\n/**\n* convert unit size to px size\n* @function\n* @memberof Utils\n*/\nexport function convertUnitSize(pos: string, size: number | IObject<((pos: number) => number) | number>) {\n  const { value, unit } = splitUnit(pos);\n\n  if (isObject(size)) {\n    const sizeFunction = size[unit];\n    if (sizeFunction) {\n      if (isFunction(sizeFunction)) {\n        return sizeFunction(value);\n      } else if (DEFAULT_UNIT_PRESETS[unit]) {\n        return DEFAULT_UNIT_PRESETS[unit](value, sizeFunction);\n      }\n    }\n  } else if (unit === \"%\") {\n    return value * size / 100;\n  }\n  if (DEFAULT_UNIT_PRESETS[unit]) {\n    return DEFAULT_UNIT_PRESETS[unit](value);\n  }\n  return value;\n}\n\n/**\n* calculate between min, max\n* @function\n* @memberof Utils\n*/\nexport function between(value: number, min: number, max: number): number {\n  return Math.max(min, Math.min(value, max));\n}\n\nexport function checkBoundSize(targetSize: number[], compareSize: number[], isMax: boolean) {\n  return [\n    [throttle(compareSize[0], TINY_NUM), throttle(compareSize[0] * targetSize[1] / targetSize[0], TINY_NUM)],\n    [throttle(compareSize[1] * targetSize[0] / targetSize[1], TINY_NUM), throttle(compareSize[1], TINY_NUM)],\n  ].filter(size => size.every((value, i) => {\n    return isMax ? value <= compareSize[i] : value >= compareSize[i];\n  }))[0] || targetSize;\n}\n\n/**\n* calculate bound size\n* @function\n* @memberof Utils\n*/\nexport function calculateBoundSize(\n  size: number[], minSize: number[],\n  maxSize: number[], keepRatio?: boolean,\n): number[] {\n  if (!keepRatio) {\n    return size.map((value, i) => between(value, minSize[i], maxSize[i]));\n  }\n  let [width, height] = size;\n  // width : height = minWidth : minHeight;\n  const [minWidth, minHeight] = checkBoundSize(size, minSize, false);\n  const [maxWidth, maxHeight] = checkBoundSize(size, maxSize, true);\n\n  if (width < minWidth || height < minHeight) {\n    width = minWidth;\n    height = minHeight;\n  } else if (width > maxWidth || height > maxHeight) {\n    width = maxWidth;\n    height = maxHeight;\n  }\n  return [width, height];\n}\n\n\n/**\n* Add all the numbers.\n* @function\n* @memberof Utils\n*/\nexport function sum(nums: number[]): number {\n  const length = nums.length;\n  let total = 0;\n\n  for (let i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n  return total;\n}\n\n/**\n* Average all numbers.\n* @function\n* @memberof Utils\n*/\nexport function average(nums: number[]) {\n  const length = nums.length;\n  let total = 0;\n\n  for (let i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n  return length ? total / length : 0;\n}\n/**\n* Get the angle of two points. (0 <= rad < 359)\n* @function\n* @memberof Utils\n*/\nexport function getRad(pos1: number[], pos2: number[]): number {\n  const distX = pos2[0] - pos1[0];\n  const distY = pos2[1] - pos1[1];\n  const rad = Math.atan2(distY, distX);\n\n  return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n/**\n* Get the average point of all points.\n* @function\n* @memberof Utils\n*/\nexport function getCenterPoint(points: number[][]): number[] {\n  return [0, 1].map(i => average(points.map(pos => pos[i])));\n}\n/**\n* Gets the direction of the shape.\n* @function\n* @memberof Utils\n*/\nexport function getShapeDirection(points: number[][]): 1 | -1 {\n  const center = getCenterPoint(points);\n  const pos1Rad = getRad(center, points[0]);\n  const pos2Rad = getRad(center, points[1]);\n\n  return (pos1Rad < pos2Rad && pos2Rad - pos1Rad < Math.PI) || (pos1Rad > pos2Rad && pos2Rad - pos1Rad < -Math.PI)\n    ? 1 : -1;\n}\n\n/**\n* Get the distance between two points.\n* @function\n* @memberof Utils\n*/\nexport function getDist(a: number[], b?: number[]) {\n  return Math.sqrt(Math.pow((b ? b[0] : 0) - a[0], 2) + Math.pow((b ? b[1] : 0) - a[1], 2));\n}\n\n/**\n* throttle number depending on the unit.\n* @function\n* @memberof Utils\n*/\nexport function throttle(num: number, unit?: number) {\n  if (!unit) {\n    return num;\n  }\n  return Math.round(num / unit) * unit;\n}\n\n/**\n* throttle number array depending on the unit.\n* @function\n* @memberof Utils\n*/\nexport function throttleArray(nums: number[], unit?: number) {\n  nums.forEach((_, i) => {\n    nums[i] = throttle(nums[i], unit);\n  });\n  return nums;\n}\n\n/**\n* @function\n* @memberof Utils\n*/\nexport function counter(num: number): number[] {\n  const nums: number[] = [];\n\n  for (let i = 0; i < num; ++i) {\n    nums.push(i);\n  }\n\n  return nums;\n}\n\n/**\n* @function\n* @memberof Utils\n*/\nexport function replaceOnce(text: string, fromText: RegExp | string, toText: string | ((...args: any[]) => string)): string {\n  let isOnce = false;\n  return text.replace(fromText, (...args: any[]) => {\n    if (isOnce) {\n      return args[0];\n    }\n    isOnce = true;\n    return isString(toText) ? toText : toText(...args);\n  });\n}\n","import { RGB, RGBA, HSL, HSLA } from \"./consts\";\nimport { splitBracket, splitComma } from \"./utils\";\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\nexport function cutHex(hex: string) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\nexport function hexToRGBA(hex: string): [number, number, number, number] {\n  const h = cutHex(hex);\n  const r = parseInt(h.substring(0, 2), 16);\n  const g = parseInt(h.substring(2, 4), 16);\n  const b = parseInt(h.substring(4, 6), 16);\n  let a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n  return [r, g, b, a];\n}\n\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\nexport function toFullHex(h: string): string {\n  const r = h.charAt(1);\n  const g = h.charAt(2);\n  const b = h.charAt(3);\n  const a = h.charAt(4);\n  const arr = [\"#\", r, r, g, g, b, b, a, a];\n\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\nexport function hslToRGBA(hsl: readonly [number, number, number, number?]): [number, number, number, number] {\n  let h = hsl[0];\n  const s = hsl[1];\n  const l = hsl[2];\n\n  if (h < 0) {\n    h +=  Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n  h %= 360;\n\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n  const m = l - c / 2;\n  let rgb: [number, number, number];\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  } else {\n    rgb = [0, 0, 0];\n  }\n\n  return [\n    Math.round((rgb[0] + m) * 255),\n    Math.round((rgb[1] + m) * 255),\n    Math.round((rgb[2] + m) * 255),\n    hsl[3] ?? 1,\n  ];\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\nexport function stringToRGBA(color: string): [number, number, number, number] {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    const {prefix, value} = splitBracket(color);\n\n    if (!prefix || !value) {\n      return undefined as never;\n    }\n    const arr = splitComma(value);\n    const colorArr: [number, number, number, number] = [0, 0, 0, 1];\n    const length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (let i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n        return colorArr;\n      case HSL:\n      case HSLA:\n        for (let i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        }\n        // hsl, hsla to rgba\n        return hslToRGBA(colorArr);\n    }\n  }\n  return undefined as never;\n}\n","import { document } from \"./consts\";\nimport { IObject, IEventMap } from \"./types\";\n\n/**\n * @namespace DOM\n */\n\nexport function $<K extends keyof HTMLElementTagNameMap>(selectors: K, multi: true):\n  NodeListOf<HTMLElementTagNameMap[K]>;\nexport function $<K extends keyof SVGElementTagNameMap>(selectors: K, multi: true): NodeListOf<SVGElementTagNameMap[K]>;\nexport function $<E extends Element = Element>(selectors: string, multi: true): NodeListOf<E>;\n\nexport function $<K extends keyof HTMLElementTagNameMap>(selectors: K, multi?: false): HTMLElementTagNameMap[K] | null;\nexport function $<K extends keyof SVGElementTagNameMap>(selectors: K, multi?: false): SVGElementTagNameMap[K] | null;\nexport function $<E extends Element = Element>(selectors: string, multi?: false): E | null;\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\nexport function $<E extends Element = Element>(selectors: string, multi?: boolean): E | NodeListOf<E> | null {\n  return multi ? document.querySelectorAll<E>(selectors) : document.querySelector<E>(selectors);\n}\n\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\nexport function hasClass(element: Element, className: string) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n  return !!element.className.match(new RegExp(`(\\\\s|^)${className}(\\\\s|$)`));\n}\n\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\nexport function addClass(element: Element, className: string) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += ` ${className}`;\n  }\n}\n\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\nexport function removeClass(element: Element, className: string) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    const reg = new RegExp(`(\\\\s|^)${className}(\\\\s|$)`);\n\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\nexport function fromCSS(\n  elements: Element | Element[] | NodeListOf<Element>, properties: string[]): IObject<any> {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n  let element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n  const cssObject: IObject<any> = {};\n  const styles = window.getComputedStyle(element) as any;\n  const length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n  return cssObject;\n}\n\nexport function addEvent<K extends keyof IEventMap>(\n  el: EventTarget, type: K, listener: (e: IEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener.\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\nexport function addEvent(\n  el: EventTarget,\n  type: string, listener: (e: Event) => void,\n  options?: boolean | AddEventListenerOptions) {\n  el.addEventListener(type, listener, options);\n}\n\nexport function removeEvent<K extends keyof IEventMap>(\n  el: EventTarget, type: K, listener: (e: IEventMap[K]) => void, options?: boolean | EventListenerOptions): void;\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @param - An options object that specifies characteristics about the event listener.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\nexport function removeEvent(\n  el: EventTarget, type: string,\n  listener: (e: Event) => void,\n  options?: boolean | EventListenerOptions,\n) {\n  el.removeEventListener(type, listener, options);\n}\n"],"names":["getCrossBrowserProperty","property","doc","styles","body","documentElement","style","length","prefixes","UNDEFINED","i","name","RGB","RGBA","HSL","HSLA","COLOR_MODELS","FUNCTION","OBJECT","STRING","NUMBER","IS_WINDOW","window","document","TRANSFORM","FILTER","ANIMATION","KEYFRAMES","replace","OPEN_CLOSED_CHARACTERS","open","close","TINY_NUM","DEFAULT_UNIT_PRESETS","pos","size","innerWidth","innerHeight","Math","max","min","isObject","value","isString","isFunction","findOpen","openCharacter","texts","index","openCloseCharacters","findIgnore","closeCharacter","character","trim","nextIndex","find","_a","findClose","ignore","otherText","slice","join","RegExp","exec","splitText","text","splitOptions","separator","_b","isSeparateFirst","isSeparateOnlyOpenClose","_c","isSeparateOpenClose","_d","openClosedText","map","regex","split","filter","Boolean","values","tempValues","resetTemp","push","Error","splitComma","splitBracket","matches","prefix","suffix","splitUnit","unit","NaN","parseFloat","now","Date","getTime","findIndex","arr","callback","defaultIndex","findLastIndex","defalutValue","requestAnimationFrame","firstTime","raf","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","bind","currTime","setTimeout","between","checkBoundSize","targetSize","compareSize","isMax","throttle","every","average","nums","total","getRad","pos1","pos2","distX","distY","rad","atan2","PI","getCenterPoint","points","num","round","cutHex","hex","hexToRGBA","h","r","parseInt","substring","g","b","a","isNaN","toFullHex","charAt","hslToRGBA","hsl","s","l","floor","abs","c","x","m","rgb","color","indexOf","colorArr","a1","a2","b1","b2","Array","isArray","str","all","letter","toUpperCase","letter2","toLowerCase","call","caf","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","handle","clearTimeout","obj","Object","keys","orders","sort","index1","index2","sizeFunction","minSize","maxSize","keepRatio","width","height","minWidth","minHeight","maxWidth","maxHeight","center","pos1Rad","pos2Rad","sqrt","pow","forEach","_","fromText","toText","isOnce","_i","args","selectors","multi","querySelectorAll","querySelector","element","className","classList","contains","match","add","reg","remove","elements","properties","Element","cssObject","getComputedStyle","el","type","listener","options","addEventListener","removeEventListener"],"mappings":"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"}