{"version":3,"file":"shapepoly.min.js","sources":["../src/consts.ts","../src/index.ts"],"sourcesContent":["export const TOP = \"top\";\nexport const BOTTOM = \"bottom\";\nexport const LEFT = \"left\";\nexport const RIGHT = \"right\";\nexport type DIRECTION = \"top\" | \"bottom\" | \"left\" | \"right\";\nexport const REVERSE = {\n  [TOP]: BOTTOM,\n  [BOTTOM]: TOP,\n  [LEFT]: RIGHT,\n  [RIGHT]: LEFT,\n};\nexport const POLY_CLASS = \"__shape-poly\";\nexport const SIDE_CLASS = `${POLY_CLASS}-side`;\nexport const POSITION_ABSOLUTE = \"position:absolute;\";\nexport const SIDE_CSS = `${POSITION_ABSOLUTE}width:100%;height:100%;border-radius:inherit;\nbackground-color:inherit;transform-origin:inherit;`;\n","import { BOTTOM, TOP, DIRECTION, SIDE_CLASS, POLY_CLASS,\n  POSITION_ABSOLUTE, REVERSE, LEFT, RIGHT, SIDE_CSS } from \"./consts\";\n\nfunction splitUnit(text: string) {\n  const matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return { unit: \"\", value: NaN };\n  }\n  const value = matches[2];\n  const unit = matches[3];\n\n  return { unit, value: parseFloat(value) };\n}\nfunction getTransformOrigin(strokeWidth: string | number, isVertical: boolean) {\n  const x = isVertical ? strokeWidth : \"50%\";\n  const y = isVertical ? \"50%\" : strokeWidth;\n\n  return `transform-origin:${x} ${y};`;\n}\n\nfunction getHTML(no: number | string, style: string, content: string = \"\") {\n  return `<div class=\"${SIDE_CLASS}${no}\" style=\"${style}\">${content}</div>`;\n}\nfunction makeDOM(tag: string, className: string) {\n  const el = document.createElement(tag);\n\n  el.className = className;\n  return el;\n}\nfunction getSin(side: number) {\n  // sin([n / 2] * 180 / n)\n  return Math.sin(Math.floor(side / 2) * Math.PI / side);\n}\nfunction getCos(side: number) {\n  // cos(180 / n)\n  return Math.cos(Math.PI / side);\n}\nfunction getStarAngle(side: number, radius: number) {\n  const cos = getCos(side);\n\n  return 100 * cos  <= radius ? 0 :\n    Math.atan((cos - radius / 100) / Math.sin(Math.PI / side)) / Math.PI * 180;\n}\nfunction getSideSize(side: number, split: number,\n                     starAngle: number, strokeWidth: string | number) {\n  const starRatio = starAngle ? 1 / Math.cos(starAngle * Math.PI / 180) : 1;\n  let ratio = 1 / split;\n\n  if (side > 4) {\n    const sin = Math.sin(Math.PI / side);\n    const cos = Math.cos(Math.PI / side);\n\n    if (side % 4 === 0) {\n      // 2 * r * cos(180 / n) = w\n      // 2 * r * sin(180 / n) = size\n      ratio *= sin / cos;\n    } else if (side % 2 === 0) {\n      ratio *= sin;\n    } else {\n      // 2 * r * sin([n /2] * 180 / n) = w\n      // 2 * r * sin(180 / n) = size\n      ratio *= sin / getSin(side);\n    }\n  } else if (split === 1) {\n    return \"100%\";\n  }\n  ratio *= starRatio;\n\n  return `calc(100% * ${ratio} - ${strokeWidth} * ${ratio} + ${strokeWidth})`;\n}\nfunction getHeight(side: number, strokeWidth: string | number, isVertical: boolean) {\n  if (side % 4 === 0) {\n    return \"100%\";\n  }\n  const cos = getCos(side);\n\n  let ratio = 0;\n  if (side % 2 === 0) {\n    // w * cos = h (vertical)\n    // w / cos = h (horizontal)\n    ratio = isVertical ? cos : 1 / cos;\n  } else {\n    const sin = getSin(side);\n\n    if (isVertical) {\n      // 2 * r * sin([n /2] * 180 / n) = w\n      ratio = 0.5 / sin * (1 + cos);\n    } else {\n      // r * (1 + cos(180 / n)) = w\n      ratio = 2 * 1 / (1 + cos) * sin;\n    }\n  }\n  return `calc(100% * ${ratio} + ${strokeWidth} * ${1 - ratio})`;\n}\n\nfunction getFirstTransform(side: number, split: number, isVertical: boolean,\n                           starAngle: number, strokeValue: number, strokeUnit: string) {\n  const translateProperty = isVertical ? \"X\" : \"Y\";\n  const cos = Math.cos(starAngle * Math.PI / 180);\n\n  const arr = [];\n  if (side >= 4) {\n    arr.push(`translate${translateProperty}(-${50 * cos * split}%)`);\n    if (split > 1) {\n      arr.push(`translate${translateProperty}(${strokeValue / 2 * (cos * split - 1)}${strokeUnit})`);\n    }\n  }\n  if (starAngle !== 0) {\n    arr.push(`rotate(${starAngle}deg)`);\n  }\n  return arr.length > 0 ? `transform:${arr.join(\" \")};` : \"\";\n}\nexport function dom(el: HTMLElement) {\n  const strokeWidth = el.getAttribute(\"data-stroke-width\") || undefined;\n  const stroke = el.getAttribute(\"data-stroke\") || undefined;\n  const direction = (el.getAttribute(\"data-direction\") as DIRECTION) || undefined;\n\n  return poly({ strokeWidth, stroke, direction, container: el });\n}\ninterface PolyInterface {\n  side?: number;\n  split?: number;\n  strokeWidth: number | string;\n  className?: string;\n  starRadius?: number;\n  container?: HTMLElement;\n  direction?: DIRECTION;\n  stroke?: string;\n}\nexport function poly({\n  className = POLY_CLASS,\n  strokeWidth = 0,\n  side = 3,\n  split = 1,\n  starRadius = 100,\n  stroke = \"black\",\n  direction = BOTTOM,\n  container = makeDOM(\"div\", className),\n}: PolyInterface) {\n  const splitCount = split * (starRadius === 100 ? 1 : 2);\n  const {unit: strokeUnit, value: strokeValue} = splitUnit(`${strokeWidth}`);\n  const half = `${strokeValue / 2}${strokeUnit}`;\n  const reverseDirection = REVERSE[direction];\n  const isVertical = direction === TOP || direction === BOTTOM;\n  const directionProperty = isVertical ? LEFT : TOP;\n  const padding = getHeight(side, strokeWidth, isVertical);\n  const sign = direction === TOP || direction === RIGHT ? -1 : 1;\n  const starAngle = starRadius === 100 ? 0 : getStarAngle(side, starRadius);\n  const sideWidth = getSideSize(side, splitCount, starAngle, strokeWidth);\n  const width = isVertical ? sideWidth : strokeWidth;\n  const height = isVertical ? strokeWidth : sideWidth;\n  const externalAngle = 360 / side + 2 * starAngle;\n  let html;\n\n  for (let i = side - 1; i >= 0; --i) {\n    for (let j = splitCount - 1; j >= 0; --j) {\n      const no = i * splitCount + j;\n\n      if (no === 0) {\n        continue;\n      }\n      const transform = j === 0 ? `transform:rotate(${sign * externalAngle}deg)` :\n        (starAngle && j === splitCount / 2 ? `transform:rotate(${-sign * 2 * starAngle}deg)` : \"\");\n\n      html = getHTML(no, SIDE_CSS + `${directionProperty}:100%;\n      margin-${directionProperty}:-${strokeWidth};${transform}`, html);\n    }\n  }\n\n  const pos = side < 4 ? \"0\" : \"50%\";\n  const transformSplit = getFirstTransform(side, splitCount, isVertical, sign * starAngle, strokeValue, strokeUnit);\n  const sideHTML = getHTML(0, `${POSITION_ABSOLUTE}${reverseDirection}: 0;\n  ${directionProperty}:${pos};${transformSplit}${getTransformOrigin(half, isVertical)}\n  display:inline-block;width:${width};height:${height};border-radius:${half};\n  background:${stroke};`, html);\n\n  const percentHTML = getHTML(\"percent\", `position:relative;width:100%;padding-top:${padding}`);\n\n  if (getComputedStyle(container).position === \"static\") {\n    container.style.position = \"relative\";\n  }\n  container.insertAdjacentHTML(\"beforeend\", sideHTML + percentHTML);\n\n  return container;\n}\nexport function be(container: HTMLElement, {\n  strokeWidth = 0,\n  side = 3,\n  split = 1,\n  starRadius = 100,\n  stroke = \"black\",\n  direction = BOTTOM,\n}: PolyInterface) {\n\n}\nexport const VERSION = \"#__VERSION__#\";\n"],"names":["TOP","BOTTOM","LEFT","RIGHT","REVERSE","_a","POLY_CLASS","SIDE_CLASS","POSITION_ABSOLUTE","SIDE_CSS","getHTML","no","style","content","getSin","side","Math","sin","floor","PI","getCos","cos","poly","tag","className","el","radius","html","_b","_c","strokeWidth","_d","_e","split","_f","starRadius","_g","stroke","_h","direction","_j","container","document","createElement","splitCount","_k","text","matches","exec","unit","value","NaN","parseFloat","strokeUnit","strokeValue","half","reverseDirection","isVertical","directionProperty","padding","ratio","getHeight","sign","starAngle","atan","sideWidth","starRatio","getSideSize","width","height","externalAngle","i","j","translateProperty","arr","pos","transformSplit","push","length","join","sideHTML","percentHTML","getComputedStyle","position","insertAdjacentHTML","getAttribute","undefined"],"mappings":"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"}