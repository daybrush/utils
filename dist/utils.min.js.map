{"version":3,"file":"utils.min.js","sources":["../src/consts.ts","../src/utils.ts","../src/color.ts","../src/dom.ts"],"sourcesContent":["/**\n* @namespace\n* @name Consts\n*/\n\nimport { IObject } from \"./types\";\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nexport const RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\nexport const RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\nexport const HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\nexport const HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\nexport const COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\nexport const FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\nexport const PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\nexport const ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\nexport const OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\nexport const STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\nexport const NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\nexport const UNDEFINED = \"undefined\";\n\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\nexport const IS_WINDOW = typeof window !== UNDEFINED;\n\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\nconst doc = (typeof document !== UNDEFINED && document) as Document; // FIXME: this type maybe false\n\nexport {doc as document};\n\nconst prefixes: string[] = [\"webkit\", \"ms\", \"moz\", \"o\"];\n\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\nexport const getCrossBrowserProperty =  /*#__PURE__*/(property: string) => {\n  if (!doc) {\n    return \"\";\n  }\n  const styles = (doc.body || doc.documentElement).style as any;\n  const length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n  for (let i = 0; i < length; ++i) {\n    const name = `-${prefixes[i]}-${property}`;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n  return \"\";\n};\n\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\nexport const TRANSFORM = /*#__PURE__*/getCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\nexport const FILTER = /*#__PURE__*/getCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\nexport const ANIMATION = /*#__PURE__*/getCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\nexport const KEYFRAMES = /*#__PURE__*/ANIMATION.replace(\"animation\", \"keyframes\");\n\nexport const OPEN_CLOSED_CHARACTER = [`\"`, `'`, `\\\\\"`, `\\\\'`];\nexport const TINY_NUM = 0.0000001;\nexport const DEFAULT_UNIT_PRESETS: IObject<(pos: number, size?: number) => number> = {\n  \"cm\": pos => pos * 96 / 2.54,\n  \"mm\": pos => pos * 96 / 254,\n  \"in\": pos => pos * 96,\n  \"pt\": pos => pos * 96 / 72,\n  \"pc\": pos => pos * 96 / 6,\n  \"%\": (pos, size) => pos * size! / 100,\n  \"vw\": (pos, size = window.innerWidth) => pos / 100 * size,\n  \"vh\": (pos, size = window.innerHeight) => pos / 100 * size,\n  \"vmax\": (pos, size = Math.max(window.innerWidth, window.innerHeight)) => pos / 100 * size,\n  \"vmin\": (pos, size = Math.min(window.innerWidth, window.innerHeight)) => pos / 100 * size,\n};\n","import { UNDEFINED, STRING, OBJECT, FUNCTION, IS_WINDOW, OPEN_CLOSED_CHARACTER, NUMBER, DEFAULT_UNIT_PRESETS, TINY_NUM } from \"./consts\";\nimport { IArrayFormat, IObject } from \"./types\";\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n * Returns the inner product of two numbers(`a1`, `a2`) by two criteria(`b1`, `b2`).\n * @memberof Utils\n * @param - The first number\n * @param - The second number\n * @param - The first number to base on the inner product\n * @param - The second number to base on the inner product\n * @return - Returns the inner product\nimport { dot } from \"@daybrush/utils\";\n\nconsole.log(dot(0, 15, 2, 3)); // 6\nconsole.log(dot(5, 15, 2, 3)); // 9\nconsole.log(dot(5, 15, 1, 1)); // 10\n */\nexport function dot(a1: number, a2: number, b1: number, b2: number) {\n  return (a1 * b2 + a2 * b1) / (b1 + b2);\n}\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\nexport function isUndefined(value: any): value is undefined {\n  return (typeof value === UNDEFINED);\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\nexport function isObject(value: any): value is IObject<any> {\n  return value && (typeof value === OBJECT);\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\nexport function isArray(value: any): value is any[] {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\nexport function isString(value: any): value is string {\n  return typeof value === STRING;\n}\n\nexport function isNumber(value: any): value is number {\n  return typeof value === NUMBER;\n}\n\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === FUNCTION;\n}\n\nfunction findClosed(closedCharacter: string, texts: string[], index: number, length: number) {\n  for (let i = index; i < length; ++i) {\n    const character = texts[i].trim();\n\n    if (character === closedCharacter) {\n      return i;\n    }\n    let nextIndex = i;\n    if (character === \"(\") {\n      nextIndex = findClosed(\")\", texts, i + 1, length);\n    } else if (OPEN_CLOSED_CHARACTER.indexOf(character) > -1) {\n      nextIndex = findClosed(character, texts, i + 1, length);\n    }\n    if (nextIndex === -1) {\n      break;\n    }\n    i = nextIndex;\n  }\n  return -1;\n}\nexport function splitText(text: string, separator: string) {\n  const regexText = `(\\\\s*${separator || \",\"}\\\\s*|\\\\(|\\\\)|\"|'|\\\\\\\\\"|\\\\\\\\'|\\\\s+)`;\n  const regex = new RegExp(regexText, \"g\");\n  const texts = text.split(regex).filter(Boolean);\n  const length = texts.length;\n  const values: string[] = [];\n  let tempValues: string[] = [];\n\n  for (let i = 0; i < length; ++i) {\n    const character = texts[i].trim();\n    let nextIndex = i;\n\n    if (character === \"(\") {\n      nextIndex = findClosed(\")\", texts, i + 1, length);\n    } else if (character === \")\") {\n      throw new Error(\"invalid format\");\n    } else if (OPEN_CLOSED_CHARACTER.indexOf(character) > -1) {\n      nextIndex = findClosed(character, texts, i + 1, length);\n    } else if (character === separator) {\n      if (tempValues.length) {\n        values.push(tempValues.join(\"\"));\n        tempValues = [];\n      }\n      continue;\n    }\n\n    if (nextIndex === -1) {\n      nextIndex = length - 1;\n    }\n    tempValues.push(texts.slice(i, nextIndex + 1).join(\"\"));\n    i = nextIndex;\n  }\n  if (tempValues.length) {\n    values.push(tempValues.join(\"\"));\n  }\n  return values;\n}\n\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitSpace(text: string) {\n  // divide comma(,)\n  return splitText(text, \"\");\n}\n\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitComma(text: string): string[] {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  return splitText(text, \",\");\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\nexport function splitBracket(text: string) {\n  const matches = (/([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g).exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return { prefix: matches[1], value: matches[2], suffix: matches[3] };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\nexport function splitUnit(text: string): { prefix: string, unit: string, value: number } {\n  const matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return { prefix: \"\", unit: \"\", value: NaN };\n  }\n  const prefix = matches[1];\n  const value = matches[2];\n  const unit = matches[3];\n\n  return { prefix, unit, value: parseFloat(value) };\n}\n\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\nexport function decamelize(str: string, separator: string = \"-\") {\n  return str.replace(/([a-z])([A-Z])/g, (all, letter, letter2) => `${letter}${separator}${letter2.toLowerCase()}`);\n}\n\n/**\n* transforms something in an array into an array.\n* @memberof Utils\n* @param - Array form\n* @return an array\n* @example\nimport {toArray} from \"@daybrush/utils\";\n\nconst arr1 = toArray(document.querySelectorAll(\".a\")); // Element[]\nconst arr2 = toArray(document.querySelectorAll<HTMLElement>(\".a\")); // HTMLElement[]\n*/\nexport function toArray<T>(value: IArrayFormat<T>): T[] {\n  return [].slice.call(value);\n}\n\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\nexport function now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n\n/**\n* Returns the index of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `findIndex` was called upon.\n* @param - A function to execute on each value in the array until the function returns true, indicating that the satisfying element was found.\n* @param - Returns defaultIndex if not found by the function.\n* @example\nimport { findIndex } from \"@daybrush/utils\";\n\nfindIndex([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // 1\n*/\nexport function findIndex<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defaultIndex: number = -1,\n): number {\n  const length = arr.length;\n\n  for (let i = 0; i < length; ++i) {\n    if (callback(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return defaultIndex;\n}\n\n/**\n* Returns the value of the first element in the array that satisfies the provided testing function.\n* @function\n* @memberof CrossBrowser\n* @param - The array `find` was called upon.\n* @param - A function to execute on each value in the array,\n* @param - Returns defalutValue if not found by the function.\n* @example\nimport { find } from \"@daybrush/utils\";\n\nfind([{a: 1}, {a: 2}, {a: 3}, {a: 4}], ({ a }) => a === 2); // {a: 2}\n*/\nexport function find<T>(\n  arr: T[],\n  callback: (element: T, index: number, arr: T[]) => any,\n  defalutValue?: T,\n): T | undefined {\n  const index = findIndex(arr, callback);\n\n  return index > - 1 ? arr[index] : defalutValue;\n}\n\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\nexport const requestAnimationFrame = /*#__PURE__*/(() => {\n  const firstTime = now();\n  const raf = IS_WINDOW\n    && (window.requestAnimationFrame || window.webkitRequestAnimationFrame\n      || (window as any).mozRequestAnimationFrame || (window as any).msRequestAnimationFrame);\n\n  return raf ? (raf.bind(window) as (callback: FrameRequestCallback) => number) : ((callback: FrameRequestCallback) => {\n    const currTime = now();\n    const id = window.setTimeout(() => {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  });\n})();\n\n/**\n* window.cancelAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {number} handle - the id obtained through requestAnimationFrame method\n* @return {void}\n* @example\nimport { requestAnimationFrame, cancelAnimationFrame } from \"@daybrush/utils\";\n\nconst id = requestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n\ncancelAnimationFrame(id);\n*/\nexport const cancelAnimationFrame = /*#__PURE__*/(() => {\n  const caf = IS_WINDOW\n    && (window.cancelAnimationFrame || window.webkitCancelAnimationFrame\n      || (window as any).mozCancelAnimationFrame || (window as any).msCancelAnimationFrame);\n\n  return caf\n    ? caf.bind(window) as (handle: number) => void\n    : ((handle: number) => { clearTimeout(handle); });\n})();\n/**\n* @function\n* @memberof Utils\n*/\nexport function getKeys(obj: IObject<any>): string[] {\n  if (Object.keys) {\n    return Object.keys(obj);\n  }\n  const keys: string[] = [];\n  for (const name in keys) {\n    keys.push(name);\n  }\n  return keys;\n}\n\n/**\n* @function\n* @memberof Utils\n*/\nexport function sortOrders(keys: Array<string | number>, orders: Array<string | number> = []) {\n  keys.sort((a, b) => {\n    const index1 = orders.indexOf(a);\n    const index2 = orders.indexOf(b);\n\n    if (index2 === -1 && index1 === -1) {\n      return 0;\n    }\n    if (index1 === -1) {\n      return 1;\n    }\n    if (index2 === -1) {\n      return -1;\n    }\n    return index1 - index2;\n  });\n}\n\n/**\n* convert unit size to px size\n* @function\n* @memberof Utils\n*/\nexport function convertUnitSize(pos: string, size: number | IObject<((pos: number) => number) | number>) {\n  const { value, unit } = splitUnit(pos);\n\n  if (isObject(size)) {\n    const sizeFunction = size[unit];\n    if (sizeFunction) {\n      if (isFunction(sizeFunction)) {\n        return sizeFunction(value);\n      } else if (DEFAULT_UNIT_PRESETS[unit]) {\n        return DEFAULT_UNIT_PRESETS[unit](value, sizeFunction);\n      }\n    }\n  } else if (unit === \"%\") {\n    return value * size / 100;\n  }\n  if (DEFAULT_UNIT_PRESETS[unit]) {\n    return DEFAULT_UNIT_PRESETS[unit](value);\n  }\n  return value;\n}\n\n/**\n* calculate between min, max\n* @function\n* @memberof Utils\n*/\nexport function between(value: number, min: number, max: number): number {\n  return Math.max(min, Math.min(value, max));\n}\n\n/**\n* throttle number\n* @function\n* @memberof Utils\n*/\nexport function throttle(num: number, unit?: number) {\n  if (!unit) {\n      return num;\n  }\n  return Math.round(num / unit) * unit;\n}\nexport function checkBoundSize(targetSize: number[], compareSize: number[], isMax: boolean) {\n  return [\n    [throttle(compareSize[0], TINY_NUM), throttle(compareSize[0] * targetSize[1] / targetSize[0], TINY_NUM)],\n    [throttle(compareSize[1] * targetSize[0] / targetSize[1], TINY_NUM), throttle(compareSize[1], TINY_NUM)],\n  ].filter(size => size.every((value, i) => {\n    return isMax ? value <= compareSize[i] : value >= compareSize[i];\n  }))[0] || targetSize;\n}\n\n/**\n* calculate bound size\n* @function\n* @memberof Utils\n*/\nexport function calculateBoundSize(\n  size: number[], minSize: number[],\n  maxSize: number[], keepRatio?: boolean,\n): number[] {\n  if (!keepRatio) {\n    return size.map((value, i) => between(value, minSize[i], maxSize[i]));\n  }\n  let [width, height] = size;\n  // width : height = minWidth : minHeight;\n  const [minWidth, minHeight] = checkBoundSize(size, minSize, false);\n  const [maxWidth, maxHeight] = checkBoundSize(size, maxSize, true);\n\n  if (width < minWidth || height < minHeight) {\n    width = minWidth;\n    height = minHeight;\n  } else if (width > maxWidth || height > maxHeight) {\n    width = maxWidth;\n    height = maxHeight;\n  }\n  return [width, height];\n}\n\n\n/**\n* Add all the numbers.\n* @function\n* @memberof Utils\n*/\nexport function sum(nums: number[]): number {\n  const length = nums.length;\n  let total = 0;\n\n  for (let i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n  return total;\n}\n\n/**\n* Average all numbers.\n* @function\n* @memberof Utils\n*/\nexport function average(nums: number[]) {\n  const length = nums.length;\n  let total = 0;\n\n  for (let i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n  return length ? total / length : 0;\n}\n/**\n* Get the angle of two points. (0 <= rad < 359)\n* @function\n* @memberof Utils\n*/\nexport function getRad(pos1: number[], pos2: number[]): number {\n  const distX = pos2[0] - pos1[0];\n  const distY = pos2[1] - pos1[1];\n  const rad = Math.atan2(distY, distX);\n\n  return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n/**\n* Get the average point of all points.\n* @function\n* @memberof Utils\n*/\nexport function getCenterPoint(points: number[][]): number[] {\n  return [0, 1].map(i => average(points.map(pos => pos[i])));\n}\n/**\n* Gets the direction of the shape.\n* @function\n* @memberof Utils\n*/\nexport function getShapeDirection(points: number[][]): 1 | -1 {\n  const center = getCenterPoint(points);\n  const pos1Rad = getRad(center, points[0]);\n  const pos2Rad = getRad(center, points[1]);\n\n  return (pos1Rad < pos2Rad && pos2Rad - pos1Rad < Math.PI) || (pos1Rad > pos2Rad && pos2Rad - pos1Rad < -Math.PI)\n    ? 1 : -1;\n}\n\n/**\n* Get the distance between two points.\n* @function\n* @memberof Utils\n*/\nexport function getDist(a: number[], b?: number[]) {\n  return Math.sqrt(Math.pow((b ? b[0] : 0) - a[0], 2) + Math.pow((b ? b[1] : 0) - a[1], 2));\n}\n","import { RGB, RGBA, HSL, HSLA } from \"./consts\";\nimport { splitBracket, splitComma } from \"./utils\";\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\nexport function cutHex(hex: string) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\nexport function hexToRGBA(hex: string): [number, number, number, number] {\n  const h = cutHex(hex);\n  const r = parseInt(h.substring(0, 2), 16);\n  const g = parseInt(h.substring(2, 4), 16);\n  const b = parseInt(h.substring(4, 6), 16);\n  let a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n  return [r, g, b, a];\n}\n\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\nexport function toFullHex(h: string): string {\n  const r = h.charAt(1);\n  const g = h.charAt(2);\n  const b = h.charAt(3);\n  const a = h.charAt(4);\n  const arr = [\"#\", r, r, g, g, b, b, a, a];\n\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\nexport function hslToRGBA(hsl: readonly [number, number, number, number?]): [number, number, number, number] {\n  let h = hsl[0];\n  const s = hsl[1];\n  const l = hsl[2];\n\n  if (h < 0) {\n    h +=  Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n  h %= 360;\n\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n  const m = l - c / 2;\n  let rgb: [number, number, number];\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  } else {\n    rgb = [0, 0, 0];\n  }\n\n  return [\n    Math.round((rgb[0] + m) * 255),\n    Math.round((rgb[1] + m) * 255),\n    Math.round((rgb[2] + m) * 255),\n    hsl[3] ?? 1,\n  ];\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\nexport function stringToRGBA(color: string): [number, number, number, number] {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    const {prefix, value} = splitBracket(color);\n\n    if (!prefix || !value) {\n      return undefined as never;\n    }\n    const arr = splitComma(value);\n    const colorArr: [number, number, number, number] = [0, 0, 0, 1];\n    const length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (let i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n        return colorArr;\n      case HSL:\n      case HSLA:\n        for (let i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        }\n        // hsl, hsla to rgba\n        return hslToRGBA(colorArr);\n    }\n  }\n  return undefined as never;\n}\n","import { document } from \"./consts\";\nimport { IObject, IEventMap } from \"./types\";\n\n/**\n * @namespace DOM\n */\n\nexport function $<K extends keyof HTMLElementTagNameMap>(selectors: K, multi: true):\n  NodeListOf<HTMLElementTagNameMap[K]>;\nexport function $<K extends keyof SVGElementTagNameMap>(selectors: K, multi: true): NodeListOf<SVGElementTagNameMap[K]>;\nexport function $<E extends Element = Element>(selectors: string, multi: true): NodeListOf<E>;\n\nexport function $<K extends keyof HTMLElementTagNameMap>(selectors: K, multi?: false): HTMLElementTagNameMap[K] | null;\nexport function $<K extends keyof SVGElementTagNameMap>(selectors: K, multi?: false): SVGElementTagNameMap[K] | null;\nexport function $<E extends Element = Element>(selectors: string, multi?: false): E | null;\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\nexport function $<E extends Element = Element>(selectors: string, multi?: boolean): E | NodeListOf<E> | null {\n  return multi ? document.querySelectorAll<E>(selectors) : document.querySelector<E>(selectors);\n}\n\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\nexport function hasClass(element: Element, className: string) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n  return !!element.className.match(new RegExp(`(\\\\s|^)${className}(\\\\s|$)`));\n}\n\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\nexport function addClass(element: Element, className: string) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += ` ${className}`;\n  }\n}\n\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\nexport function removeClass(element: Element, className: string) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    const reg = new RegExp(`(\\\\s|^)${className}(\\\\s|$)`);\n\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\nexport function fromCSS(\n  elements: Element | Element[] | NodeListOf<Element>, properties: string[]): IObject<any> {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n  let element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n  const cssObject: IObject<any> = {};\n  const styles = window.getComputedStyle(element) as any;\n  const length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n  return cssObject;\n}\n\nexport function addEvent<K extends keyof IEventMap>(\n  el: EventTarget, type: K, listener: (e: IEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener. The available options are:\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\nexport function addEvent(\n  el: EventTarget,\n  type: string, listener: (e: Event) => void,\n  options?: boolean | AddEventListenerOptions) {\n  el.addEventListener(type, listener, options);\n}\n\nexport function removeEvent<K extends keyof IEventMap>(\n  el: EventTarget, type: K, listener: (e: IEventMap[K]) => void): void;\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\nexport function removeEvent(el: EventTarget, type: string, listener: (e: Event) => void) {\n  el.removeEventListener(type, listener);\n}\n"],"names":["getCrossBrowserProperty","property","doc","styles","body","documentElement","style","length","prefixes","UNDEFINED","i","name","RGB","RGBA","HSL","HSLA","COLOR_MODELS","FUNCTION","OBJECT","STRING","NUMBER","IS_WINDOW","window","document","TRANSFORM","FILTER","ANIMATION","KEYFRAMES","replace","OPEN_CLOSED_CHARACTER","TINY_NUM","DEFAULT_UNIT_PRESETS","pos","size","innerWidth","innerHeight","Math","max","min","isObject","value","isFunction","findClosed","closedCharacter","texts","index","character","trim","nextIndex","indexOf","splitText","text","separator","regex","RegExp","split","filter","Boolean","values","tempValues","Error","push","join","slice","splitComma","splitBracket","matches","exec","prefix","suffix","splitUnit","unit","NaN","parseFloat","now","Date","getTime","findIndex","arr","callback","defaultIndex","requestAnimationFrame","firstTime","raf","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","bind","currTime","setTimeout","between","throttle","num","round","checkBoundSize","targetSize","compareSize","isMax","every","average","nums","total","getRad","pos1","pos2","distX","distY","rad","atan2","PI","getCenterPoint","points","map","cutHex","hex","hexToRGBA","h","r","parseInt","substring","g","b","a","isNaN","toFullHex","charAt","hslToRGBA","hsl","s","l","floor","abs","c","x","m","rgb","color","_a","colorArr","a1","a2","b1","b2","Array","isArray","str","all","letter","toUpperCase","letter2","toLowerCase","call","defalutValue","caf","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","handle","clearTimeout","obj","Object","keys","orders","sort","index1","index2","sizeFunction","minSize","maxSize","keepRatio","width","height","minWidth","minHeight","_b","maxWidth","maxHeight","center","pos1Rad","pos2Rad","sqrt","pow","selectors","multi","querySelectorAll","querySelector","element","className","classList","contains","match","add","reg","remove","elements","properties","Element","cssObject","getComputedStyle","el","type","listener","options","addEventListener","removeEventListener"],"mappings":"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"}